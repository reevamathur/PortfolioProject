--Covid 19 Data Exploration till 25th Aug,2021
--Skills used- Creating table(covid_deaths & covid_vaccination), Joins, CTE, Aggregate Functions, Creating temp tables and Creating Views

SELECT * FROM covid_deaths
Where continent is not null

SELECT * FROM covid_vaccination

--select data that we are going to be starting with
SELECT location, date, total_cases, new_cases, total_deaths, population
FROM covid_deaths
Where continent is not null
ORDER BY 1,2

--Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in India
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS death_percentage  
FROM covid_deaths
Where location = 'India'
and continent is not null
ORDER BY 1,2

-- Total Cases vs Population
-- Shows what percentage of population infected with Covid
SELECT location, date, total_cases, population, (total_cases/population)*100 AS case_percentage  
FROM covid_deaths
Where location = 'India'
ORDER BY 1,2

-- Countries with Highest Infection Rate compared to Population
SELECT location, population, MAX(total_cases) AS HighestInfection, MAX(total_cases/population)*100 AS casepercentage
FROM covid_deaths
GROUP BY location, population
ORDER BY casepercentage Desc

-- Countries with Highest Death Count per Population
SELECT location, Max(total_deaths) as TotalDeathCount
FROM covid_deaths
Where continent is not null
GROUP BY location
ORDER BY TotalDeathCount Desc

-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population
SELECT continent, Max(total_deaths) as TotalDeathCount
FROM covid_deaths
Where continent is not null
GROUP BY continent
ORDER BY TotalDeathCount Desc

--global numbers
SELECT SUM(new_cases) as total_cases, SUM(new_deaths) AS total_deaths, SUM(new_cases)/SUM(new_deaths)*100 AS death_percentage
FROM covid_deaths
Where continent is not null
ORDER BY 1,2

--covid vaccination table

--total population vs vaccination
SELECT covid_deaths.continent, covid_deaths.location, covid_deaths.date, covid_deaths.population 
FROM covid_deaths JOIN covid_vaccination
ON covid_deaths.location = covid_vaccination.location
and covid_deaths.date = covid_vaccination.date
Where covid_deaths.continent is not null
ORDER BY 2,3

-- Shows Percentage of Population that has recieved at least one Covid Vaccine
SELECT covid_deaths.continent, covid_deaths.location, covid_deaths.date, covid_deaths.population, covid_vaccination.new_vaccinations,
SUM(covid_vaccination.new_vaccinations) OVER (partition by covid_deaths.location ORDER BY covid_deaths.location, covid_deaths.date)
FROM covid_deaths JOIN covid_vaccination
ON covid_deaths.location = covid_vaccination.location
and covid_deaths.date = covid_vaccination.date
Where covid_deaths.continent is not null
ORDER BY 2,3

-- Using CTE to perform Calculation on Partition By in previous query
with PopvsVac (continent, location, date, population, new_vaccinations)
as
(
SELECT covid_deaths.continent, covid_deaths.location, covid_deaths.date, covid_deaths.population, covid_vaccination.new_vaccinations,
SUM(covid_vaccination.new_vaccinations) OVER (partition by covid_deaths.location ORDER BY covid_deaths.location, covid_deaths.date) as RollingPeopleVaccinated
FROM covid_deaths JOIN covid_vaccination
ON covid_deaths.location = covid_vaccination.location
and covid_deaths.date = covid_vaccination.date
Where covid_deaths.continent is not null
--ORDER BY 2,3
)
SELECT *,(RollingPeopleVaccinated/Population)*100
FROM PopvsVac


-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists PercentPopulationVaccinated

CREATE TEMP TABLE PercentPopulationVaccinated
(
Continent varchar(255),
location varchar(255),
Date date,
Population numeric,
New_vaccination numeric,
RollingPeopleVaccinated	numeric
)

Insert into PercentPopulationVaccinated
SELECT covid_deaths.continent, covid_deaths.location, covid_deaths.date, covid_deaths.population, covid_vaccination.new_vaccinations,
SUM(covid_vaccination.new_vaccinations) OVER (partition by covid_deaths.location ORDER BY covid_deaths.location, covid_deaths.date) as RollingPeopleVaccinated
FROM covid_deaths JOIN covid_vaccination
ON covid_deaths.location = covid_vaccination.location
and covid_deaths.date = covid_vaccination.date
--Where covid_deaths.continent is not null
--ORDER BY 2,3

SELECT *,(RollingPeopleVaccinated/Population)*100
FROM PercentPopulationVaccinated

-- Creating View to store data for later visualizations
Create View PercentPopulationVaccinated as
SELECT covid_deaths.continent, covid_deaths.location, covid_deaths.date, covid_deaths.population, covid_vaccination.new_vaccinations,
SUM(covid_vaccination.new_vaccinations) OVER (partition by covid_deaths.location ORDER BY covid_deaths.location, covid_deaths.date) as RollingPeopleVaccinated
FROM covid_deaths JOIN covid_vaccination
ON covid_deaths.location = covid_vaccination.location
and covid_deaths.date = covid_vaccination.date
where covid_deaths.continent is not null

